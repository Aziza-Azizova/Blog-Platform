"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{User:function(){return User},UserRole:function(){return UserRole}});const _mongoose=require("mongoose");const _bcryptjs=require("bcryptjs");var UserRole;(function(UserRole){UserRole["ADMIN"]="admin";UserRole["USER"]="user"})(UserRole||(UserRole={}));const userSchema=new _mongoose.Schema({email:{type:String,unique:true,required:true},username:{type:String,required:true},password:{type:String,required:true},roles:{type:String,enum:Object.values(UserRole),default:"user",required:true},created_at:{type:Date,default:Date.now,required:true}});userSchema.pre("save",async function(next){if(this.isModified("password")||this.isNew){const hashedPassword=await (0,_bcryptjs.hash)(this.password,10);this.password=hashedPassword}next()});userSchema.method("isValidPassword",async function(password){const isValid=await (0,_bcryptjs.compare)(password,this.password);return isValid});const User=(0,_mongoose.model)("User",userSchema);