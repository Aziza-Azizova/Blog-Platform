"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{UserService:function(){return UserService},generateAccessToken:function(){return generateAccessToken}});const _Usermodel=require("./User.model");const _jsonwebtoken=/*#__PURE__*/_interop_require_default(require("jsonwebtoken"));const _dotenv=/*#__PURE__*/_interop_require_default(require("dotenv"));function _interop_require_default(obj){return obj&&obj.__esModule?obj:{default:obj}}_dotenv.default.config();const jwtKey=process.env.JWT_SECRET_KEY;function generateAccessToken(id,roles){const payload={id,roles};return _jsonwebtoken.default.sign(payload,jwtKey,{expiresIn:"1h"})}let UserService=class UserService{static async register(req,res){const{email,username,password}=req.body;const existingEmail=await _Usermodel.User.findOne({email});if(existingEmail){res.status(409).json({message:"Email already exists"});return}const newUser=new _Usermodel.User({email,username,password});await newUser.save();res.status(201).json({message:"User successfully registered",user:newUser});return}static async login(req,res){const{email,password}=req.body;const registeredUser=await _Usermodel.User.findOne({email});if(!registeredUser){res.status(404).json({message:"User not found"});return}const isValidUserPassword=await registeredUser.isValidPassword(password);if(!isValidUserPassword){res.status(401).json({message:"Wrong password"});return}const token=generateAccessToken(registeredUser._id,registeredUser.roles);res.status(200).json({message:"User successfully logged in",user:registeredUser,token});return}};